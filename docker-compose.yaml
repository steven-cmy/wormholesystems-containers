name: ws
services:
  application:
    hostname: application
    image: application:latest
    build:
      context: .
      dockerfile: dockerfiles/php/php.dockerfile
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
      - php-logs:/var/log/php
      - laravel-logs:/var/www/html/storage/logs
    networks:
      - network
  mysql:
    hostname: mysql
    build:
      context: .
      dockerfile: dockerfiles/mysql/mysql.dockerfile
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-logs:/var/log/mysql
    env_file:
      - dockerfiles/mysql/.env
    networks:
      - network
  redis:
    hostname: redis
    build:
      context: .
      dockerfile: dockerfiles/redis/redis.dockerfile
    volumes:
      - redis-logs:/var/log/redis
    networks:
      - network
  composer:
    hostname: composer
    build:
      context: .
      dockerfile: dockerfiles/composer/composer.dockerfile
    volumes:
      - ./wormhole-systems:/var/www/html
      - laravel-logs:/var/www/html/storage/logs
    depends_on:
        - application
    networks:
      - network
  npm:
    hostname: npm
    image: application:latest
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./wormhole-systems:/var/www/html
      - laravel-logs:/var/www/html/storage/logs
    depends_on:
      - application
    networks:
      - network
  server:
    hostname: server
    build:
      context: .
      dockerfile: dockerfiles/server/nginx.dockerfile
    volumes:
      - ./wormhole-systems:/var/www/html
      - ./dockerfiles/server/nginx.conf:/etc/nginx/conf.d/default.conf
      - nginx-logs:/var/log/nginx
    depends_on:
      - application
      - mysql
      - redis
    restart: ${RESTART_POLICY:-always}
    environment:
      - APP_DOMAIN=${APP_DOMAIN:-localhost}
    networks:
      - network
      - skynet
  artisan:
    hostname: artisan
    image: application:latest
    working_dir: /var/www/html
    entrypoint: ["php","-d", "memory_limit=-1", "artisan"]
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
      - laravel-logs:/var/www/html/storage/logs
    depends_on:
      - application
    networks:
      - network
  queue:
    hostname: queue
    image: application:latest
    tty: true
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
      - laravel-logs:/var/www/html/storage/logs
    working_dir: /var/www/html
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    restart: unless-stopped
    depends_on:
      - application
    networks:
      - network
  scheduler:
    hostname: scheduler
    image: application:latest
    tty: true
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
      - laravel-logs:/var/www/html/storage/logs
    working_dir: /var/www/html
    command: php artisan schedule:work
    restart: unless-stopped
    depends_on:
      - application
    networks:
      - network
  reverb:
    hostname: reverb
    image: application:latest
    working_dir: /var/www/html
    tty: true
    volumes:
      - ./wormhole-systems:/var/www/html:delegated
      - laravel-logs:/var/www/html/storage/logs
    depends_on:
      - mysql
      - redis
      - application
    command: php artisan reverb:start --host=${REVERB_HOST:-0.0.0.0} --port=${REVERB_PORT:-8080} --debug
    restart: ${RESTART_POLICY:-always}
    networks:
      - network
      - skynet
volumes:
  mysql-data:
  # Log volumes for persistent storage
  nginx-logs:
  php-logs:
  mysql-logs:
  redis-logs:
  laravel-logs:
networks:
    network:
    skynet:
      external: true
